#!/usr/bin/env python3

import json
import os

# Путь к файлу colors.json, генерируемому pywal
WAL_COLORS_FILE = os.path.expanduser('~/.cache/wal/colors.json')
# Путь к конфигурационному файлу Kitty
KITTY_CONFIG = os.path.expanduser('~/.config/kitty/kitty.conf')

def read_kitty_config():
    """Читает текущий конфиг Kitty, сохраняя настройки шрифта и другие параметры."""
    if not os.path.exists(KITTY_CONFIG):
        return ""
    
    with open(KITTY_CONFIG, 'r') as f:
        return f.read()

def extract_non_color_settings(config_content):
    """Извлекает настройки, не связанные с цветами."""
    lines = config_content.split('\n')
    non_color_lines = []
    for line in lines:
        if not any(color_term in line.lower() for color_term in ['color', 'foreground', 'background']):
            non_color_lines.append(line)
    return '\n'.join(non_color_lines)

try:
    with open(WAL_COLORS_FILE, 'r') as f:
        wal_data = json.load(f)

    # Получаем цвета из pywal
    colors = {
        'foreground': wal_data['special']['foreground'],
        'background': wal_data['special']['background'],
        'color0': wal_data['colors']['color0'],
        'color1': wal_data['colors']['color1'],
        'color2': wal_data['colors']['color2'],
        'color3': wal_data['colors']['color3'],
        'color4': wal_data['colors']['color4'],
        'color5': wal_data['colors']['color5'],
        'color6': wal_data['colors']['color6'],
        'color7': wal_data['colors']['color7'],
        'color8': wal_data['colors']['color8'],
        'color9': wal_data['colors']['color9'],
        'color10': wal_data['colors']['color10'],
        'color11': wal_data['colors']['color11'],
        'color12': wal_data['colors']['color12'],
        'color13': wal_data['colors']['color13'],
        'color14': wal_data['colors']['color14'],
        'color15': wal_data['colors']['color15']
    }

    # Читаем текущий конфиг и сохраняем настройки, не связанные с цветами
    current_config = read_kitty_config()
    non_color_settings = extract_non_color_settings(current_config)

    # Создаем новую конфигурацию
    new_config = f"""{non_color_settings}

# Colors generated by pywal
background_opacity 0.75

foreground {colors['foreground']}
background {colors['background']}

# Black
color0 {colors['color0']}
# Red
color1 {colors['color1']}
# Green
color2 {colors['color2']}
# Yellow
color3 {colors['color3']}
# Blue
color4 {colors['color4']}
# Magenta
color5 {colors['color5']}
# Cyan
color6 {colors['color6']}
# White
color7 {colors['color7']}

# Bright colors
# Bright Black
color8 {colors['color8']}
# Bright Red
color9 {colors['color9']}
# Bright Green
color10 {colors['color10']}
# Bright Yellow
color11 {colors['color11']}
# Bright Blue
color12 {colors['color12']}
# Bright Magenta
color13 {colors['color13']}
# Bright Cyan
color14 {colors['color14']}
# Bright White
color15 {colors['color15']}
"""

    # Записываем новую конфигурацию
    with open(KITTY_CONFIG, 'w') as f:
        f.write(new_config.strip())
    print(f"Обновлена конфигурация Kitty с цветами из pywal.")

except FileNotFoundError:
    print(f"Ошибка: файл {WAL_COLORS_FILE} не найден. Сначала запустите pywal.")
except Exception as e:
    print(f"Произошла ошибка: {e}") 